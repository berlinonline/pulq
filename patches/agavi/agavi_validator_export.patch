Index: agavi/src/validator/AgaviValidator.class.php
===================================================================
--- agavi/src/validator/AgaviValidator.class.php	(revision 4918)
+++ agavi/src/validator/AgaviValidator.class.php	(working copy)
@@ -527,7 +527,7 @@
 	 * @author     Dominik del Bondio <ddb@bitxtender.com>
 	 * @since      0.11.0
 	 */
-	protected function export($value, $name = null)
+	protected function export($value, $name = null, $paramType = null)
 	{
 		if($name === null) {
 			$name = $this->getParameter('export');
@@ -537,7 +537,10 @@
 			return;
 		}
 
+		if ($paramType === NULL)
+        {
 		$paramType = $this->getParameter('source');
+        }
 
 		$array =& $this->validationParameters->getAll($paramType);
 		$currentParts = $this->curBase->getParts();
@@ -559,10 +562,10 @@
 			if(is_array($value)) {
 				// for arrays all child elements need to be marked as not processed
 				foreach(AgaviArrayPathDefinition::getFlatKeyNames($value) as $keyName) {
-					$this->parentContainer->addArgumentResult(new AgaviValidationArgument($cp->pushRetNew($keyName)->__toString(), $this->getParameter('source')), AgaviValidator::SUCCESS, $this);
+					$this->parentContainer->addArgumentResult(new AgaviValidationArgument($cp->pushRetNew($keyName)->__toString(), $paramType), AgaviValidator::SUCCESS, $this);
 				}
 			}
-			$this->parentContainer->addArgumentResult(new AgaviValidationArgument($cp->__toString(), $this->getParameter('source')), AgaviValidator::SUCCESS, $this);
+			$this->parentContainer->addArgumentResult(new AgaviValidationArgument($cp->__toString(), $paramType), AgaviValidator::SUCCESS, $this);
 		}
 	}
 
